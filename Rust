use anchor_lang::prelude::*;
use spl_math::precise_number::PreciseNumber;

declare_id!("LunqMint11111111111111111111111111111111");

#[program]
pub mod lunq_token {
    use super::*;

    // Initialize bonding curve
    pub fn initialize(ctx: Context<Initialize>, initial_price: u64) -> Result<()> {
        let bonding_curve = &mut ctx.accounts.bonding_curve;
        bonding_curve.initial_price = initial_price;
        bonding_curve.total_supply = 0;
        Ok(())
    }

    // Mint tokens via bonding curve
    pub fn mint(ctx: Context<Mint>, sol_amount: u64) -> Result<()> {
        let bonding_curve = &mut ctx.accounts.bonding_curve;
        let tokens_to_mint = sol_amount
            .checked_div(bonding_curve.current_price())
            .ok_or(ErrorCode::MathOverflow)?;
        
        // Update supply and balance
        bonding_curve.total_supply += tokens_to_mint;
        bonding_curve.sol_reserves += sol_amount;
        
        // Transfer tokens to user
        anchor_spl::token::mint_to(
            CpiContext::new(
                ctx.accounts.token_program.to_account_info(),
                anchor_spl::token::MintTo {
                    mint: ctx.accounts.mint.to_account_info(),
                    to: ctx.accounts.user_token_account.to_account_info(),
                    authority: ctx.accounts.authority.to_account_info(),
                },
            ),
            tokens_to_mint,
        )?;
        
        Ok(())
    }
}

#[derive(Accounts)]
pub struct Initialize<'info> {
    #[account(init, payer = authority, space = 8 + 64)]
    pub bonding_curve: Account<'info, BondingCurve>,
    pub mint: Account<'info, anchor_spl::token::Mint>,
    #[account(mut)]
    pub authority: Signer<'info>,
    pub system_program: Program<'info, System>,
}

#[account]
pub struct BondingCurve {
    pub initial_price: u64,
    pub total_supply: u64,
    pub sol_reserves: u64,
}

impl BondingCurve {
    pub fn current_price(&self) -> u64 {
        self.initial_price + (self.total_supply / 1_000_000) // Example linear curve
    }
}
